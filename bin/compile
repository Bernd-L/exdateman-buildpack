#!/bin/bash

# MIT License

# Copyright (c) 2019 Bernd L.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#####################################################
# This file is the main script of the buildpack,    #
# it writes the files specified in the config vars. #
#####################################################

# Functions
indent() {
  sed -u 's/^/       /'
}

arrow() {
  sed -u 's/^/-----> /'
}

# Make some space
echo | indent

# Log start of script
echo "Writing files from config vars" | arrow

# Assign variables
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Count the number of files written
Files=0
Files_done=0

# Don't use wildcards as literals
set +f

# Log written file # TODO remove debug
ls $ENV_DIR

# Only iterate over the config var-files prefixed "WF_42_"
for Current_file in $ENV_DIR/WF_42_*; do

  # Increase the files counter
  ((Files++))

  # Use wildcards as literals
  set -f

  # Split the Current_file into parts
  Name_parts=(${Current_file//_42_/ })

  # Variable to hold full destination path
  Full_dest_path=""

  # Log written file # TODO remove debug
  echo "Current_file ($Files): $Current_file" | indent

  # Iterate over the split parts
  for i in "${!Name_parts[@]}"; do
    # Log written file # TODO remove debug
    echo "Part number $i is: ${Name_parts[i]}" | indent

    if (($i != 0)); then
      Full_dest_path="$Full_dest_path/${Name_parts[i]}"
    fi
  done

  # Make folder structure
  mkdir -p "$(dirname "$BUILD_DIR$Full_dest_path")"

  # Log written file # TODO remove debug
  echo "Writing file number $Files: $Full_dest_path" | indent

  # Log written file # TODO remove debug
  # echo "Writing to path number $Files: $BUILD_DIR" | indent

  # Write file contents
  cat "$Current_file" >"$BUILD_DIR$Full_dest_path"

  # Log written file
  echo "Wrote file number $Files: $Full_dest_path" | indent

  # Increase the files_done counter
  ((Files_done++))

  # End loop
done

# Log successful files
echo "Wrote $Files_done files." | arrow
echo | indent

# Reset settings
set +f

# Clean exit
exit 0
